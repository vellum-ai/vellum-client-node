/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Vellum from "../../../../../api/index";
import * as core from "../../../../../core";
import { EntityStatus } from "../../../../types/EntityStatus";
import { DocumentIndexIndexingConfigRequest } from "../../../../types/DocumentIndexIndexingConfigRequest";

export const DocumentIndexCreateRequest: core.serialization.Schema<
    serializers.DocumentIndexCreateRequest.Raw,
    Vellum.DocumentIndexCreateRequest
> = core.serialization.object({
    label: core.serialization.string(),
    name: core.serialization.string(),
    status: EntityStatus.optional(),
    indexingConfig: core.serialization.property("indexing_config", DocumentIndexIndexingConfigRequest),
    copyDocumentsFromIndexId: core.serialization.property(
        "copy_documents_from_index_id",
        core.serialization.string().optional(),
    ),
});

export declare namespace DocumentIndexCreateRequest {
    export interface Raw {
        label: string;
        name: string;
        status?: EntityStatus.Raw | null;
        indexing_config: DocumentIndexIndexingConfigRequest.Raw;
        copy_documents_from_index_id?: string | null;
    }
}
