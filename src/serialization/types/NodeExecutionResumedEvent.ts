/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { NodeExecutionResumedBody } from "./NodeExecutionResumedBody";
import { ApiVersionEnum } from "./ApiVersionEnum";

export const NodeExecutionResumedEvent: core.serialization.ObjectSchema<
    serializers.NodeExecutionResumedEvent.Raw,
    Vellum.NodeExecutionResumedEvent
> = core.serialization.object({
    parent: core.serialization.lazy(() => serializers.ParentContext).optionalNullable(),
    links: core.serialization.list(core.serialization.lazyObject(() => serializers.SpanLink)).optionalNullable(),
    name: core.serialization.stringLiteral("node.execution.resumed"),
    body: NodeExecutionResumedBody,
    id: core.serialization.string(),
    timestamp: core.serialization.date(),
    apiVersion: core.serialization.property("api_version", ApiVersionEnum.optional()),
    traceId: core.serialization.property("trace_id", core.serialization.string()),
    spanId: core.serialization.property("span_id", core.serialization.string()),
});

export declare namespace NodeExecutionResumedEvent {
    export interface Raw {
        parent?: (serializers.ParentContext.Raw | null) | null;
        links?: (serializers.SpanLink.Raw[] | null) | null;
        name: "node.execution.resumed";
        body: NodeExecutionResumedBody.Raw;
        id: string;
        timestamp: string;
        api_version?: ApiVersionEnum.Raw | null;
        trace_id: string;
        span_id: string;
    }
}
