/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VellumCodeResourceDefinition } from "./VellumCodeResourceDefinition";

export const NodeParentContext: core.serialization.ObjectSchema<
    serializers.NodeParentContext.Raw,
    Vellum.NodeParentContext
> = core.serialization.object({
    parent: core.serialization.lazy(() => serializers.ParentContext).optionalNullable(),
    links: core.serialization.list(core.serialization.lazyObject(() => serializers.SpanLink)).optionalNullable(),
    nodeDefinition: core.serialization.property("node_definition", VellumCodeResourceDefinition),
    type: core.serialization.stringLiteral("WORKFLOW_NODE"),
    spanId: core.serialization.property("span_id", core.serialization.string()),
});

export declare namespace NodeParentContext {
    export interface Raw {
        parent?: (serializers.ParentContext.Raw | null) | null;
        links?: (serializers.SpanLink.Raw[] | null) | null;
        node_definition: VellumCodeResourceDefinition.Raw;
        type: "WORKFLOW_NODE";
        span_id: string;
    }
}
