/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VellumNodeExecutionEvent } from "./VellumNodeExecutionEvent";
import { NodeExecutionSpanAttributes } from "./NodeExecutionSpanAttributes";

export const NodeExecutionSpan: core.serialization.ObjectSchema<
    serializers.NodeExecutionSpan.Raw,
    Vellum.NodeExecutionSpan
> = core.serialization.object({
    name: core.serialization.stringLiteral("node.execution"),
    events: core.serialization.list(VellumNodeExecutionEvent),
    attributes: NodeExecutionSpanAttributes,
    spanId: core.serialization.property("span_id", core.serialization.string()),
    startTs: core.serialization.property("start_ts", core.serialization.date()),
    endTs: core.serialization.property("end_ts", core.serialization.date()),
    parentSpanId: core.serialization.property("parent_span_id", core.serialization.string().optional()),
});

export declare namespace NodeExecutionSpan {
    export interface Raw {
        name: "node.execution";
        events: VellumNodeExecutionEvent.Raw[];
        attributes: NodeExecutionSpanAttributes.Raw;
        span_id: string;
        start_ts: string;
        end_ts: string;
        parent_span_id?: string | null;
    }
}
