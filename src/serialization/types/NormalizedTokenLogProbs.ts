/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";

export const NormalizedTokenLogProbs: core.serialization.ObjectSchema<
    serializers.NormalizedTokenLogProbs.Raw,
    Vellum.NormalizedTokenLogProbs
> = core.serialization.object({
    token: core.serialization.string(),
    logprob: core.serialization.number().optionalNullable(),
    topLogprobs: core.serialization.property(
        "top_logprobs",
        core.serialization
            .record(core.serialization.string(), core.serialization.number().optionalNullable())
            .optionalNullable(),
    ),
    textOffset: core.serialization.property("text_offset", core.serialization.number()),
});

export declare namespace NormalizedTokenLogProbs {
    export interface Raw {
        token: string;
        logprob?: (number | null) | null;
        top_logprobs?: (Record<string, (number | null) | null | undefined> | null) | null;
        text_offset: number;
    }
}
