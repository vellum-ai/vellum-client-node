/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VellumCodeResourceDefinition } from "./VellumCodeResourceDefinition";
import { InvokedPort } from "./InvokedPort";

export const NodeExecutionFulfilledBody: core.serialization.ObjectSchema<
    serializers.NodeExecutionFulfilledBody.Raw,
    Vellum.NodeExecutionFulfilledBody
> = core.serialization.object({
    nodeDefinition: core.serialization.property("node_definition", VellumCodeResourceDefinition),
    invokedPorts: core.serialization.property("invoked_ports", core.serialization.list(InvokedPort).optionalNullable()),
    outputs: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    mocked: core.serialization.boolean().optionalNullable(),
});

export declare namespace NodeExecutionFulfilledBody {
    export interface Raw {
        node_definition: VellumCodeResourceDefinition.Raw;
        invoked_ports?: (InvokedPort.Raw[] | null) | null;
        outputs: Record<string, unknown>;
        mocked?: (boolean | null) | null;
    }
}
