/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { WorkflowResultEvent } from "./WorkflowResultEvent";

export const WorkflowExecutionWorkflowResultEvent: core.serialization.ObjectSchema<
    serializers.WorkflowExecutionWorkflowResultEvent.Raw,
    Vellum.WorkflowExecutionWorkflowResultEvent
> = core.serialization.object({
    executionId: core.serialization.property("execution_id", core.serialization.string()),
    runId: core.serialization.property("run_id", core.serialization.string().optionalNullable()),
    externalId: core.serialization.property("external_id", core.serialization.string().optionalNullable()),
    type: core.serialization.stringLiteral("WORKFLOW"),
    data: WorkflowResultEvent,
});

export declare namespace WorkflowExecutionWorkflowResultEvent {
    export interface Raw {
        execution_id: string;
        run_id?: (string | null) | null;
        external_id?: (string | null) | null;
        type: "WORKFLOW";
        data: WorkflowResultEvent.Raw;
    }
}
