/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { PromptBlockState } from "./PromptBlockState";
import { EphemeralPromptCacheConfig } from "./EphemeralPromptCacheConfig";
import { RichTextChildBlock } from "./RichTextChildBlock";

export const RichTextPromptBlock: core.serialization.ObjectSchema<
    serializers.RichTextPromptBlock.Raw,
    Vellum.RichTextPromptBlock
> = core.serialization.object({
    blockType: core.serialization.property("block_type", core.serialization.stringLiteral("RICH_TEXT")),
    state: PromptBlockState.optional(),
    cacheConfig: core.serialization.property("cache_config", EphemeralPromptCacheConfig.optionalNullable()),
    blocks: core.serialization.list(RichTextChildBlock),
});

export declare namespace RichTextPromptBlock {
    export interface Raw {
        block_type: "RICH_TEXT";
        state?: PromptBlockState.Raw | null;
        cache_config?: (EphemeralPromptCacheConfig.Raw | null) | null;
        blocks: RichTextChildBlock.Raw[];
    }
}
