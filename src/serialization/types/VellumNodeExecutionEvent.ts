/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { NodeExecutionInitiatedEvent } from "./NodeExecutionInitiatedEvent";
import { NodeExecutionStreamingEvent } from "./NodeExecutionStreamingEvent";
import { NodeExecutionFulfilledEvent } from "./NodeExecutionFulfilledEvent";
import { NodeExecutionRejectedEvent } from "./NodeExecutionRejectedEvent";
import { NodeExecutionPausedEvent } from "./NodeExecutionPausedEvent";
import { NodeExecutionResumedEvent } from "./NodeExecutionResumedEvent";

export const VellumNodeExecutionEvent: core.serialization.Schema<
    serializers.VellumNodeExecutionEvent.Raw,
    Vellum.VellumNodeExecutionEvent
> = core.serialization.undiscriminatedUnion([
    NodeExecutionInitiatedEvent,
    NodeExecutionStreamingEvent,
    NodeExecutionFulfilledEvent,
    NodeExecutionRejectedEvent,
    NodeExecutionPausedEvent,
    NodeExecutionResumedEvent,
]);

export declare namespace VellumNodeExecutionEvent {
    export type Raw =
        | NodeExecutionInitiatedEvent.Raw
        | NodeExecutionStreamingEvent.Raw
        | NodeExecutionFulfilledEvent.Raw
        | NodeExecutionRejectedEvent.Raw
        | NodeExecutionPausedEvent.Raw
        | NodeExecutionResumedEvent.Raw;
}
