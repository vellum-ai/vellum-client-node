/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { FunctionCall } from "./FunctionCall";

export const ExecutionFunctionCallVellumValue: core.serialization.ObjectSchema<
    serializers.ExecutionFunctionCallVellumValue.Raw,
    Vellum.ExecutionFunctionCallVellumValue
> = core.serialization.object({
    id: core.serialization.string(),
    name: core.serialization.string(),
    type: core.serialization.stringLiteral("FUNCTION_CALL"),
    value: FunctionCall.optionalNullable(),
});

export declare namespace ExecutionFunctionCallVellumValue {
    export interface Raw {
        id: string;
        name: string;
        type: "FUNCTION_CALL";
        value?: (FunctionCall.Raw | null) | null;
    }
}
