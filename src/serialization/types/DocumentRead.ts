/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { DocumentProcessingState } from "./DocumentProcessingState";
import { DocumentStatus } from "./DocumentStatus";
import { DocumentDocumentToDocumentIndex } from "./DocumentDocumentToDocumentIndex";

export const DocumentRead: core.serialization.ObjectSchema<serializers.DocumentRead.Raw, Vellum.DocumentRead> =
    core.serialization.object({
        id: core.serialization.string(),
        externalId: core.serialization.property("external_id", core.serialization.string().optionalNullable()),
        lastUploadedAt: core.serialization.property("last_uploaded_at", core.serialization.date()),
        label: core.serialization.string(),
        processingState: core.serialization.property("processing_state", DocumentProcessingState),
        status: DocumentStatus.optional(),
        originalFileUrl: core.serialization.property(
            "original_file_url",
            core.serialization.string().optionalNullable(),
        ),
        processedFileUrl: core.serialization.property(
            "processed_file_url",
            core.serialization.string().optionalNullable(),
        ),
        documentToDocumentIndexes: core.serialization.property(
            "document_to_document_indexes",
            core.serialization.list(DocumentDocumentToDocumentIndex),
        ),
        metadata: core.serialization
            .record(core.serialization.string(), core.serialization.unknown())
            .optionalNullable(),
    });

export declare namespace DocumentRead {
    export interface Raw {
        id: string;
        external_id?: (string | null) | null;
        last_uploaded_at: string;
        label: string;
        processing_state: DocumentProcessingState.Raw;
        status?: DocumentStatus.Raw | null;
        original_file_url?: (string | null) | null;
        processed_file_url?: (string | null) | null;
        document_to_document_indexes: DocumentDocumentToDocumentIndex.Raw[];
        metadata?: (Record<string, unknown> | null) | null;
    }
}
