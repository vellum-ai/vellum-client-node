/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { ExecutionVellumValue } from "./ExecutionVellumValue";
import { WorkflowError } from "./WorkflowError";
import { WorkflowExecutionUsageResult } from "./WorkflowExecutionUsageResult";
import { VellumSpan } from "./VellumSpan";

export const WorkflowExecutionDetail: core.serialization.ObjectSchema<
    serializers.WorkflowExecutionDetail.Raw,
    Vellum.WorkflowExecutionDetail
> = core.serialization.object({
    spanId: core.serialization.property("span_id", core.serialization.string()),
    parentContext: core.serialization.property(
        "parent_context",
        core.serialization.lazy(() => serializers.ParentContext).optionalNullable(),
    ),
    start: core.serialization.date(),
    end: core.serialization.date().optionalNullable(),
    inputs: core.serialization.list(ExecutionVellumValue),
    outputs: core.serialization.list(ExecutionVellumValue),
    error: WorkflowError.optionalNullable(),
    usageResults: core.serialization.property(
        "usage_results",
        core.serialization.list(WorkflowExecutionUsageResult).optionalNullable(),
    ),
    spans: core.serialization.list(VellumSpan),
    state: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optionalNullable(),
});

export declare namespace WorkflowExecutionDetail {
    export interface Raw {
        span_id: string;
        parent_context?: (serializers.ParentContext.Raw | null) | null;
        start: string;
        end?: (string | null) | null;
        inputs: ExecutionVellumValue.Raw[];
        outputs: ExecutionVellumValue.Raw[];
        error?: (WorkflowError.Raw | null) | null;
        usage_results?: (WorkflowExecutionUsageResult.Raw[] | null) | null;
        spans: VellumSpan.Raw[];
        state?: (Record<string, unknown> | null) | null;
    }
}
