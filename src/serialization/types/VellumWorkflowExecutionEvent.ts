/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { WorkflowExecutionInitiatedEvent } from "./WorkflowExecutionInitiatedEvent";
import { WorkflowExecutionStreamingEvent } from "./WorkflowExecutionStreamingEvent";
import { WorkflowExecutionFulfilledEvent } from "./WorkflowExecutionFulfilledEvent";
import { WorkflowExecutionRejectedEvent } from "./WorkflowExecutionRejectedEvent";
import { WorkflowExecutionPausedEvent } from "./WorkflowExecutionPausedEvent";
import { WorkflowExecutionResumedEvent } from "./WorkflowExecutionResumedEvent";
import { WorkflowExecutionSnapshottedEvent } from "./WorkflowExecutionSnapshottedEvent";

export const VellumWorkflowExecutionEvent: core.serialization.Schema<
    serializers.VellumWorkflowExecutionEvent.Raw,
    Vellum.VellumWorkflowExecutionEvent
> = core.serialization.undiscriminatedUnion([
    WorkflowExecutionInitiatedEvent,
    WorkflowExecutionStreamingEvent,
    WorkflowExecutionFulfilledEvent,
    WorkflowExecutionRejectedEvent,
    WorkflowExecutionPausedEvent,
    WorkflowExecutionResumedEvent,
    WorkflowExecutionSnapshottedEvent,
]);

export declare namespace VellumWorkflowExecutionEvent {
    export type Raw =
        | WorkflowExecutionInitiatedEvent.Raw
        | WorkflowExecutionStreamingEvent.Raw
        | WorkflowExecutionFulfilledEvent.Raw
        | WorkflowExecutionRejectedEvent.Raw
        | WorkflowExecutionPausedEvent.Raw
        | WorkflowExecutionResumedEvent.Raw
        | WorkflowExecutionSnapshottedEvent.Raw;
}
