/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { SearchWeightsRequest } from "./SearchWeightsRequest";
import { SearchResultMergingRequest } from "./SearchResultMergingRequest";
import { SearchFiltersRequest } from "./SearchFiltersRequest";

export const SearchRequestOptionsRequest: core.serialization.ObjectSchema<
    serializers.SearchRequestOptionsRequest.Raw,
    Vellum.SearchRequestOptionsRequest
> = core.serialization.object({
    limit: core.serialization.number().optionalNullable(),
    weights: SearchWeightsRequest.optionalNullable(),
    resultMerging: core.serialization.property("result_merging", SearchResultMergingRequest.optionalNullable()),
    filters: SearchFiltersRequest.optionalNullable(),
});

export declare namespace SearchRequestOptionsRequest {
    export interface Raw {
        limit?: (number | null) | null;
        weights?: (SearchWeightsRequest.Raw | null) | null;
        result_merging?: (SearchResultMergingRequest.Raw | null) | null;
        filters?: (SearchFiltersRequest.Raw | null) | null;
    }
}
