/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { WorkflowExecutionResumedBody } from "./WorkflowExecutionResumedBody";
import { ApiVersionEnum } from "./ApiVersionEnum";

export const WorkflowExecutionResumedEvent: core.serialization.ObjectSchema<
    serializers.WorkflowExecutionResumedEvent.Raw,
    Vellum.WorkflowExecutionResumedEvent
> = core.serialization.object({
    parent: core.serialization.lazy(() => serializers.ParentContext).optional(),
    links: core.serialization.list(core.serialization.lazyObject(() => serializers.SpanLink)).optional(),
    name: core.serialization.stringLiteral("workflow.execution.resumed"),
    body: WorkflowExecutionResumedBody,
    id: core.serialization.string(),
    timestamp: core.serialization.date(),
    apiVersion: core.serialization.property("api_version", ApiVersionEnum.optional()),
    traceId: core.serialization.property("trace_id", core.serialization.string()),
    spanId: core.serialization.property("span_id", core.serialization.string()),
});

export declare namespace WorkflowExecutionResumedEvent {
    export interface Raw {
        parent?: serializers.ParentContext.Raw | null;
        links?: serializers.SpanLink.Raw[] | null;
        name: "workflow.execution.resumed";
        body: WorkflowExecutionResumedBody.Raw;
        id: string;
        timestamp: string;
        api_version?: ApiVersionEnum.Raw | null;
        trace_id: string;
        span_id: string;
    }
}
