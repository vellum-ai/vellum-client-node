/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";

export const WorkflowStateMetaNodeExecutionCache: core.serialization.ObjectSchema<
    serializers.WorkflowStateMetaNodeExecutionCache.Raw,
    Vellum.WorkflowStateMetaNodeExecutionCache
> = core.serialization.object({
    nodeExecutionsFulfilled: core.serialization.property(
        "node_executions_fulfilled",
        core.serialization.record(core.serialization.string(), core.serialization.list(core.serialization.string())),
    ),
    nodeExecutionsInitiated: core.serialization.property(
        "node_executions_initiated",
        core.serialization.record(core.serialization.string(), core.serialization.list(core.serialization.string())),
    ),
});

export declare namespace WorkflowStateMetaNodeExecutionCache {
    export interface Raw {
        node_executions_fulfilled: Record<string, string[]>;
        node_executions_initiated: Record<string, string[]>;
    }
}
