/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { IntegrationAuthConfigIntegration } from "./IntegrationAuthConfigIntegration";
import { IntegrationAuthConfigIntegrationCredential } from "./IntegrationAuthConfigIntegrationCredential";
import { IntegrationCredentialAccessType } from "./IntegrationCredentialAccessType";

export const SlimIntegrationAuthConfigRead: core.serialization.ObjectSchema<
    serializers.SlimIntegrationAuthConfigRead.Raw,
    Vellum.SlimIntegrationAuthConfigRead
> = core.serialization.object({
    id: core.serialization.string().optional(),
    integration: IntegrationAuthConfigIntegration,
    integrationCredentials: core.serialization.property(
        "integration_credentials",
        core.serialization.list(IntegrationAuthConfigIntegrationCredential).optionalNullable(),
    ),
    defaultAccessType: core.serialization.property("default_access_type", IntegrationCredentialAccessType.optional()),
});

export declare namespace SlimIntegrationAuthConfigRead {
    export interface Raw {
        id?: string | null;
        integration: IntegrationAuthConfigIntegration.Raw;
        integration_credentials?: (IntegrationAuthConfigIntegrationCredential.Raw[] | null) | null;
        default_access_type?: IntegrationCredentialAccessType.Raw | null;
    }
}
