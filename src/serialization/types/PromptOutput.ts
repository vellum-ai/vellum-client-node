/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { StringVellumValue } from "./StringVellumValue";
import { JsonVellumValue } from "./JsonVellumValue";
import { ErrorVellumValue } from "./ErrorVellumValue";
import { FunctionCallVellumValue } from "./FunctionCallVellumValue";
import { ThinkingVellumValue } from "./ThinkingVellumValue";

export const PromptOutput: core.serialization.Schema<serializers.PromptOutput.Raw, Vellum.PromptOutput> =
    core.serialization.undiscriminatedUnion([
        StringVellumValue,
        JsonVellumValue,
        ErrorVellumValue,
        FunctionCallVellumValue,
        ThinkingVellumValue,
    ]);

export declare namespace PromptOutput {
    export type Raw =
        | StringVellumValue.Raw
        | JsonVellumValue.Raw
        | ErrorVellumValue.Raw
        | FunctionCallVellumValue.Raw
        | ThinkingVellumValue.Raw;
}
