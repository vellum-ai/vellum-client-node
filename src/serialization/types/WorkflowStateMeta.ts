/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { WorkflowStateMetaNodeExecutionCache } from "./WorkflowStateMetaNodeExecutionCache";

export const WorkflowStateMeta: core.serialization.ObjectSchema<
    serializers.WorkflowStateMeta.Raw,
    Vellum.WorkflowStateMeta
> = core.serialization.object({
    nodeOutputs: core.serialization.property(
        "node_outputs",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    ),
    nodeExecutionCache: core.serialization.property("node_execution_cache", WorkflowStateMetaNodeExecutionCache),
});

export declare namespace WorkflowStateMeta {
    export interface Raw {
        node_outputs: Record<string, unknown>;
        node_execution_cache: WorkflowStateMetaNodeExecutionCache.Raw;
    }
}
