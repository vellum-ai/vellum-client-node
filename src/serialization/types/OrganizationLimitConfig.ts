/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VembdaServiceTierEnum } from "./VembdaServiceTierEnum";
import { Quota } from "./Quota";

export const OrganizationLimitConfig: core.serialization.ObjectSchema<
    serializers.OrganizationLimitConfig.Raw,
    Vellum.OrganizationLimitConfig
> = core.serialization.object({
    vembdaServiceTier: core.serialization.property("vembda_service_tier", VembdaServiceTierEnum.optional()),
    promptExecutionsQuota: core.serialization.property("prompt_executions_quota", Quota.optionalNullable()),
    workflowExecutionsQuota: core.serialization.property("workflow_executions_quota", Quota.optionalNullable()),
    workflowRuntimeSecondsQuota: core.serialization.property(
        "workflow_runtime_seconds_quota",
        Quota.optionalNullable(),
    ),
    maxWorkflowRuntimeSeconds: core.serialization.property(
        "max_workflow_runtime_seconds",
        core.serialization.number().optionalNullable(),
    ),
});

export declare namespace OrganizationLimitConfig {
    export interface Raw {
        vembda_service_tier?: VembdaServiceTierEnum.Raw | null;
        prompt_executions_quota?: (Quota.Raw | null) | null;
        workflow_executions_quota?: (Quota.Raw | null) | null;
        workflow_runtime_seconds_quota?: (Quota.Raw | null) | null;
        max_workflow_runtime_seconds?: (number | null) | null;
    }
}
