/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";

export const TestCaseNumberVariableValue: core.serialization.ObjectSchema<
    serializers.TestCaseNumberVariableValue.Raw,
    Vellum.TestCaseNumberVariableValue
> = core.serialization.object({
    variableId: core.serialization.property("variable_id", core.serialization.string()),
    name: core.serialization.string().optional(),
    type: core.serialization.stringLiteral("NUMBER"),
    value: core.serialization.number().optionalNullable(),
});

export declare namespace TestCaseNumberVariableValue {
    export interface Raw {
        variable_id: string;
        name?: string | null;
        type: "NUMBER";
        value?: (number | null) | null;
    }
}
