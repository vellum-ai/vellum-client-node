/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { IntegrationName } from "./IntegrationName";
import { IntegrationProvider } from "./IntegrationProvider";
import { ComponentsSchemasComposioIntegrationExecConfig } from "./ComponentsSchemasComposioIntegrationExecConfig";

export const IntegrationRead: core.serialization.ObjectSchema<serializers.IntegrationRead.Raw, Vellum.IntegrationRead> =
    core.serialization.object({
        id: core.serialization.string(),
        label: core.serialization.string().optional(),
        iconUrl: core.serialization.property("icon_url", core.serialization.string()),
        name: IntegrationName,
        provider: IntegrationProvider,
        execConfig: core.serialization.property("exec_config", ComponentsSchemasComposioIntegrationExecConfig),
    });

export declare namespace IntegrationRead {
    export interface Raw {
        id: string;
        label?: string | null;
        icon_url: string;
        name: IntegrationName.Raw;
        provider: IntegrationProvider.Raw;
        exec_config: ComponentsSchemasComposioIntegrationExecConfig.Raw;
    }
}
