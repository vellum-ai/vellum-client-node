/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { WorkflowExecutionEventErrorCode } from "./WorkflowExecutionEventErrorCode";

export const WorkflowEventError: core.serialization.ObjectSchema<
    serializers.WorkflowEventError.Raw,
    Vellum.WorkflowEventError
> = core.serialization.object({
    message: core.serialization.string(),
    code: WorkflowExecutionEventErrorCode,
    rawData: core.serialization.property(
        "raw_data",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optionalNullable(),
    ),
    stacktrace: core.serialization.string().optionalNullable(),
});

export declare namespace WorkflowEventError {
    export interface Raw {
        message: string;
        code: WorkflowExecutionEventErrorCode.Raw;
        raw_data?: (Record<string, unknown> | null) | null;
        stacktrace?: (string | null) | null;
    }
}
