/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { TestCaseVariableValue } from "./TestCaseVariableValue";

export const TestSuiteTestCase: core.serialization.ObjectSchema<
    serializers.TestSuiteTestCase.Raw,
    Vellum.TestSuiteTestCase
> = core.serialization.object({
    id: core.serialization.string().optional(),
    externalId: core.serialization.property("external_id", core.serialization.string().optionalNullable()),
    label: core.serialization.string().optionalNullable(),
    inputValues: core.serialization.property("input_values", core.serialization.list(TestCaseVariableValue)),
    evaluationValues: core.serialization.property("evaluation_values", core.serialization.list(TestCaseVariableValue)),
});

export declare namespace TestSuiteTestCase {
    export interface Raw {
        id?: string | null;
        external_id?: (string | null) | null;
        label?: (string | null) | null;
        input_values: TestCaseVariableValue.Raw[];
        evaluation_values: TestCaseVariableValue.Raw[];
    }
}
