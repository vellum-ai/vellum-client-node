/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { FunctionCall } from "./FunctionCall";
import { WorkflowNodeResultEventState } from "./WorkflowNodeResultEventState";

export const NodeOutputCompiledFunctionCallValue: core.serialization.ObjectSchema<
    serializers.NodeOutputCompiledFunctionCallValue.Raw,
    Vellum.NodeOutputCompiledFunctionCallValue
> = core.serialization.object({
    type: core.serialization.stringLiteral("FUNCTION_CALL"),
    value: FunctionCall.optionalNullable(),
    nodeOutputId: core.serialization.property("node_output_id", core.serialization.string()),
    state: WorkflowNodeResultEventState.optional(),
});

export declare namespace NodeOutputCompiledFunctionCallValue {
    export interface Raw {
        type: "FUNCTION_CALL";
        value?: (FunctionCall.Raw | null) | null;
        node_output_id: string;
        state?: WorkflowNodeResultEventState.Raw | null;
    }
}
