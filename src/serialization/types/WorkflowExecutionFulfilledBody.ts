/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Vellum from "../../api/index";
import * as core from "../../core";
import { VellumCodeResourceDefinition } from "./VellumCodeResourceDefinition";

export const WorkflowExecutionFulfilledBody: core.serialization.ObjectSchema<
    serializers.WorkflowExecutionFulfilledBody.Raw,
    Vellum.WorkflowExecutionFulfilledBody
> = core.serialization.object({
    workflowDefinition: core.serialization.property("workflow_definition", VellumCodeResourceDefinition),
    outputs: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    finalState: core.serialization.property(
        "final_state",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optionalNullable(),
    ),
    serverMetadata: core.serialization.property(
        "server_metadata",
        core.serialization.record(core.serialization.string(), core.serialization.unknown()).optionalNullable(),
    ),
});

export declare namespace WorkflowExecutionFulfilledBody {
    export interface Raw {
        workflow_definition: VellumCodeResourceDefinition.Raw;
        outputs: Record<string, unknown>;
        final_state?: (Record<string, unknown> | null) | null;
        server_metadata?: (Record<string, unknown> | null) | null;
    }
}
