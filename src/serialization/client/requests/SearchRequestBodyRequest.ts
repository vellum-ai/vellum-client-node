/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../index";
import * as Vellum from "../../../api/index";
import * as core from "../../../core";
import { SearchRequestOptionsRequest } from "../../types/SearchRequestOptionsRequest";

export const SearchRequestBodyRequest: core.serialization.Schema<
    serializers.SearchRequestBodyRequest.Raw,
    Vellum.SearchRequestBodyRequest
> = core.serialization.object({
    indexId: core.serialization.property("index_id", core.serialization.string().optionalNullable()),
    indexName: core.serialization.property("index_name", core.serialization.string().optionalNullable()),
    query: core.serialization.string(),
    options: SearchRequestOptionsRequest.optionalNullable(),
    documentIndex: core.serialization.property("document_index", core.serialization.string().optionalNullable()),
});

export declare namespace SearchRequestBodyRequest {
    export interface Raw {
        index_id?: (string | null) | null;
        index_name?: (string | null) | null;
        query: string;
        options?: (SearchRequestOptionsRequest.Raw | null) | null;
        document_index?: (string | null) | null;
    }
}
