imports:
  root: __package__.yml
service:
  auth: false
  base-path: ''
  endpoints:
    list:
      path: /v1/documents
      method: GET
      auth: true
      docs: Used to list documents. Optionally filter on supported fields.
      source:
        openapi: openapi/openapi.yml
      request:
        name: DocumentsListRequest
        query-parameters:
          document_index_id:
            type: optional<string>
            docs: >-
              Filter down to only those documents that are included in the
              specified index. You may provide either the Vellum-generated ID or
              the unique name of the index specified upon initial creation.
            validation:
              format: uuid
          limit:
            type: optional<integer>
            docs: Number of results to return per page.
          offset:
            type: optional<integer>
            docs: The initial index from which to return the results.
          ordering:
            type: optional<string>
            docs: Which field to use when ordering the results.
          search:
            type: optional<string>
            docs: A search term.
      response:
        docs: ''
        type: root.PaginatedSlimDocumentList
      url: Default
      availability: generally-available
      examples:
        - response:
            body:
              count: 123
              next: http://api.example.org/accounts/?offset=400&limit=100
              previous: http://api.example.org/accounts/?offset=200&limit=100
              results:
                - id: id
                  external_id: external_id
                  last_uploaded_at: '2024-01-15T09:30:00Z'
                  label: label
                  processing_state: QUEUED
                  processing_failure_reason: EXCEEDED_CHARACTER_LIMIT
                  status: ACTIVE
                  keywords:
                    - keywords
                  metadata:
                    key: value
                  document_to_document_indexes:
                    - id: id
                      document_index_id: document_index_id
      audiences:
        - customers
    retrieve:
      path: /v1/documents/{id}
      method: GET
      auth: true
      docs: >-
        Retrieve a Document, keying off of either its Vellum-generated ID or its
        external ID.
      source:
        openapi: openapi/openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this document.
      response:
        docs: ''
        type: root.DocumentRead
      url: Default
      availability: pre-release
      examples:
        - path-parameters:
            id: id
          response:
            body:
              id: id
              external_id: external_id
              last_uploaded_at: '2024-01-15T09:30:00Z'
              label: label
              processing_state: QUEUED
              status: ACTIVE
              original_file_url: original_file_url
              processed_file_url: processed_file_url
              document_to_document_indexes:
                - id: id
                  document_index_id: document_index_id
                  indexing_state: AWAITING_PROCESSING
                  extracted_text_file_url: extracted_text_file_url
              metadata:
                key: value
      audiences:
        - customers
    destroy:
      path: /v1/documents/{id}
      method: DELETE
      auth: true
      docs: >-
        Delete a Document, keying off of either its Vellum-generated ID or its
        external ID.
      source:
        openapi: openapi/openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this document.
      url: Documents
      availability: pre-release
      examples:
        - path-parameters:
            id: id
      audiences:
        - customers
    partialUpdate:
      path: /v1/documents/{id}
      method: PATCH
      auth: true
      docs: >-
        Update a Document, keying off of either its Vellum-generated ID or its
        external ID. Particularly useful for updating its metadata.
      source:
        openapi: openapi/openapi.yml
      path-parameters:
        id:
          type: string
          docs: A UUID string identifying this document.
      request:
        name: PatchedDocumentUpdateRequest
        body:
          properties:
            label:
              type: optional<string>
              docs: >-
                A human-readable label for the document. Defaults to the
                originally uploaded file's file name.
              validation:
                minLength: 1
                maxLength: 1000
            status:
              type: optional<root.DocumentStatus>
              docs: |-
                The current status of the document

                * `ACTIVE` - Active
            metadata:
              type: optional<map<string, unknown>>
              docs: >-
                A JSON object containing any metadata associated with the
                document that you'd like to filter upon later.
        content-type: application/json
      response:
        docs: ''
        type: root.DocumentRead
      url: Default
      availability: pre-release
      examples:
        - path-parameters:
            id: id
          request: {}
          response:
            body:
              id: id
              external_id: external_id
              last_uploaded_at: '2024-01-15T09:30:00Z'
              label: label
              processing_state: QUEUED
              status: ACTIVE
              original_file_url: original_file_url
              processed_file_url: processed_file_url
              document_to_document_indexes:
                - id: id
                  document_index_id: document_index_id
                  indexing_state: AWAITING_PROCESSING
                  extracted_text_file_url: extracted_text_file_url
              metadata:
                key: value
      audiences:
        - customers
    upload:
      path: /v1/upload-document
      method: POST
      auth: true
      docs: >
        Upload a document to be indexed and used for search.


        **Note:** Uses a base url of `https://documents.vellum.ai`.


        This is a multipart/form-data request. The `contents` field should be a
        file upload. It also expects a JSON body with the following fields:

        - `add_to_index_names: list[str]` - Optionally include the names of all
        indexes that you'd like this document to be included in

        - `external_id: str | None` - Optionally include an external ID for this
        document. This is useful if you want to re-upload the same document
        later when its contents change and would like it to be re-indexed.

        - `label: str` - A human-friendly name for this document. Typically the
        filename.

        - `keywords: list[str] | None` - Optionally include a list of keywords
        that'll be associated with this document. Used when performing keyword
        searches.

        - `metadata: dict[str, Any]` - A stringified JSON object containing any
        metadata associated with the document that you'd like to filter upon
        later.
      source:
        openapi: openapi/openapi.yml
      request:
        name: UploadDocumentBodyRequest
        body:
          properties:
            add_to_index_names:
              type: optional<list<string>>
              docs: >-
                Optionally include the names of all indexes that you'd like this
                document to be included in
            external_id:
              type: optional<string>
              docs: >-
                Optionally include an external ID for this document. This is
                useful if you want to re-upload the same document later when its
                contents change and would like it to be re-indexed.
              validation:
                minLength: 1
                maxLength: 1000
            label:
              type: string
              docs: A human-friendly name for this document. Typically the filename.
              validation:
                minLength: 1
                maxLength: 1000
            contents:
              type: file
              docs: The file contents of the document.
            keywords:
              type: optional<list<string>>
              docs: >-
                Optionally include a list of keywords that'll be associated with
                this document. Used when performing keyword searches.
            metadata:
              type: optional<string>
              docs: >-
                A stringified JSON object containing any metadata associated
                with the document that you'd like to filter upon later.
              validation:
                format: byte
        content-type: multipart/form-data
      response:
        docs: ''
        type: root.UploadDocumentResponse
      url: Documents
      availability: generally-available
      errors:
        - root.BadRequestError
        - root.NotFoundError
        - root.InternalServerError
      examples:
        - request:
            label: label
          response:
            body:
              document_id: document_id
      audiences:
        - customers
  source:
    openapi: openapi/openapi.yml
